[extension_name]
JS RegExp
[extension_info]
exposes js regexp object from sammi (but for free)
[insert_external]
[insert_command]
SAMMI.extCommand('Regular Expression', 3355443, 52, { 
    'mode': ['Store Mode', 19, 'Success', null, ['Success', 'Match', 'Capture Array', 'Index', 'Capture Index Array']], 
    'string': ['Input String', 14, ''],
    'input': ['Input Pattern', 14, ''],
    'flag': ['Flag', 14, ''],
    'output': ['Save Variable As', 14, '']
});
[insert_hook]
case "Regular Expression": { Regex(SAMMIJSON.output, SAMMIJSON.FromButton, SAMMIJSON.mode, SAMMIJSON.string, SAMMIJSON.input, SAMMIJSON.flag); } break
[insert_script]
function Regex(output, btn, mode, string, input, flag) { 
    const re = new RegExp(input, flag); let ret = null;
    switch (mode) {
        case "Success": ret = re.test(string); break;
        case "Match": ret = string.match(re); break;
        case "Index": if (!flag.includes("g")) ret = string.search(re); else {
            ret = []; let i = 0;
            while (true) { const m = string.slice(i).search(re); if (m === -1) break; ret.push(m); i += m + 1; }
        } break;
        case "Capture Array": ret = re.exec(string) ?? []; break;
        case "Capture Index Array": ret = (flag.includes("d") ? re : new RegExp(input, flag + "d")).exec(string)?.indices.map(x => x[0]) ?? []; break;
    }
    if (output !== "") SAMMI.setVariable(output, ret, btn); 
}
[insert_over]