[extension_name]
Websocket Client
[extension_info]
connect to websocket from sammi (but for free)
[insert_external]
[insert_command]
/*
* Websocket Client by prodzpod
* 
* Commands
* *Connect to Websocket*: establish connection with a websocket address. 
* *Send to Websocket*: sends data to the websocket instance.
*
* Triggers
* *Websocket Open*: triggered when websocket has established connection.
*   - *websocket*: an ID that can be used to send data.
* *Websocket Close*: triggered when websocket has just been closed.
*   - *websocket*: an ID that just closed.
* *Websocket Message*: triggered when websocket recieves data from the server.
*   - *websocket*: an ID that can be used to send data.
*   - *message*: the data object.
* *Websocket Error*: triggered when websocket has just encountered an error.
*   - *websocket*: an ID that just closed.
*   - *error*: the error message.
*/
SAMMI.extCommand('Connect to Websocket', 3355443, 52, { 'url': ['URL', 14, ''], 'output': ['Save Variable As', 14, ''] });
SAMMI.extCommand('Send to Websocket', 3355443, 52, { 'ws': ['Websocket', 15, ''], 'input': ['Input', 14, ''] });
[insert_hook]
case "Connect to Websocket": { PROD_SAMMI_WS_INIT(SAMMIJSON.output, SAMMIJSON.FromButton, SAMMIJSON.url); } break
case "Send to Websocket": { PROD_SAMMI_WS_SEND(SAMMIJSON.ws, SAMMIJSON.FromButton, SAMMIJSON.input); } break
[insert_script]
let PROD_WEBSOCKET_WEBSOCKETS = [];
function PROD_SAMMI_WS_INIT(output, btn, url) {
    const ws = new WebSocket(url);
    PROD_WEBSOCKET_WEBSOCKETS.push(ws);
    const id = PROD_WEBSOCKET_WEBSOCKETS.length;
    ws.addEventListener("open", () => SAMMI.triggerExt('Websocket Open', { websocket: id }));
    ws.addEventListener("close", () => SAMMI.triggerExt('Websocket Close', { websocket: id }));
    ws.addEventListener("message", m => SAMMI.triggerExt('Websocket Message', { websocket: id, message: m.data }));
    ws.addEventListener("error", e => SAMMI.triggerExt('Websocket Error', { websocket: id, error: e }));
    if (output !== "") SAMMI.setVariable(output, id, btn); 
}
function PROD_SAMMI_WS_SEND(ws, btn, input) { PROD_WEBSOCKET_WEBSOCKETS[ws].send(input) }
[insert_over]